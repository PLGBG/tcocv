#%RAML 0.8
title: TCOCV
version: 1.2
baseUri: http://server/api/{version}/tcocv
/customers:
  get:
    queryParameters: 
      type:
        default: EXACT
        enum:  [FUZZY, EXACT]
      consultationId:
      bookingRef:
      title: 
      firstName:    
      surname:
      street:
      postcode:
      emailAddress: 
      telephoneNumber:
      systemIdentifier:           
    description: Looks for customers using the elements provided as query parameters.  This will return a list of customers, their current address and contact details 
    responses:
      200:
        description: A successful search that has returned at least one person.  The data will always be returned in an array.
        body:
          application/json:
            example: !include examples/search.json
      204:
        description: No customers were found with the provided search criteria. An empty array will be returned
        body:
          application/json:
            example: |
              []        
      400:
        description: The request failed validation.  This should only occur if a search is required but the parameters were not set correctly
        body:
          application/json: 
            example: !include examples/search-invalid.json   
      403:
        description: The access failed authentication
        body:
          application/json:
            example: !include examples/security.json     
  post:
    queryParameters: 
      systemID: 
        description: Identifies which system is initiating this request.  Either WebRio or MSD.
        required: true
        type: string
    description: Creates a new customer resource. This will contain their personal information, address and other contact information    
    body:
      application/json:
        example: !include examples/create-customer.json            
    responses:
      201:
        headers:
          customer-id:
            type: string
        description: The customer was created successfully       
      400:
        description: The request failed validation.  The exact errors are captured in the JSON response
        body:
          application/json:
      403:
        description: The access failed authentication
        body:
          application/json:
            example: !include examples/security.json 
      409:
        description: The customer could not be created as another customer with the exact title, name and address.  The response will include the identifier of that customer found
        headers:
          matched-customer-id:
            type: string
        body:
          application/json:
            example: !include examples/create-already-exists.json
  /recommendation:
    /update:
      post:
        description: Updates the customer recommendations.
        body:
          application/json:
            example: !include examples/update-customer-recommendation.json
        responses:
          200:
            description: The recommendation was upadted successfully
          400:
            description: The request was invalid             
  /handoverCode:
    /{handoverCode}:
      get:
        description: Gets the specific customer information for this handover code
        responses:
          200:
            description: The request was successful and a customer was found
            body:
              application/json:
                example: !include examples/customer.json
          400:
            description: The request failed validation      
          403:
            description: The access failed authentication
            body:
              application/json:
                example: !include examples/security.json
          404:
            description: The request was successful but no customer was found with that handover code
  /{customerID}:
    get:
      description: Gets the specific customer information for this identifier
      responses:
        200:
          description: The request was succesful and a customer was found
          body:
            application/json:
              example: !include examples/customer.json
        204:
          description: The request was succesful but no customer was found with that ID. An empty element is returned
          body:
            application/json:
              example: | 
                {}      
        403:
          description: The access failed authentication
          body:
            application/json:
              example: !include examples/security.json                      
    put:
      description: Creates or updates a Customer with specified gbgID
      queryParameters: 
        systemID: 
          description: Identifies which system is initiating this request.  Either WebRio or MSD.
          required: true
          type: string
      body:
        application/json:
          example: !include examples/put-customer.json
      responses:
        200:
          description: The customer was updated
        201:
          description: The customer was created
        400:
          description: The request was invalid
    patch:
      description: This allows elements of the customer resource to be updated or added to
      queryParameters: 
        systemID: 
          description: Identifies which system is initiating this request.  Either WebRio or MSD.
          required: true
          type: string
      body:
        application/json:
          example: !include examples/update-customer.json
      responses:
        200:
          headers:
            matches-found:
              type: boolean
          description: The patch call was succesful
        400:
          description: The request failed validation
        403:
          description: The access failed authentication
          body:
            application/json:
              example: !include examples/security.json              
        404:
          description: The customer belonging to id provided could not be found
          body:
            application/json:
              example: !include examples/update-not-found.json
    /statistics:
      get:
        description: Retrieves statistical informaiton for the provided customer id
        responses:
          200:
            description: The request was successful
            body:
              application/json:
          204:
            description: The request was succesful but no customer was found with that ID. An empty element is returned
            body:
              application/json:
                example: |
                  {}        
          403:
            description: The access failed authentication
            body:
              application/json:
                example: !include examples/security.json
    /complaints:
      get:
        description: Get customer complaints
        responses:
          200:
            description: The request was successful
            body:
              application/json:
                example: !include examples/complaints.json
          204:
            description: The request was succesful but no customer was found with that ID. An empty element is returned
            body:
              application/json:
                example: |
                  {}           
          403:
            description: The access failed authentication
            body:
              application/json:
                example: !include examples/security.json
    /communications:
      get:
        description: Get communications sent to customer
        responses:
          200:
            description: The request was successful
            body:
              application/json:
          204:
            description: The request was succesful but no customer was found with that ID.  An empty element is returned
            body:
              application/json:
                example: |
                  {}           
          403:
            description: The access failed authentication
            body:
              application/json:
                example: !include examples/security.json
    /preferences:
      get:
        description: Get customer preferences
        responses:
          200:
            description: The request was successful and preferences have been found
            body:
              application/json:
          204:
            description: The request was succesful but no preferences were found.  An empty element is returned
            body:
              application/json:
                example: |
                  {}    
          403:
            description: The access failed authentication
            body:
              application/json:
                example: !include examples/security.json
          404:
            description: No customer was found with the supplied customer ID
    /wishlist:
      get:
        description: Get customer wishlists
        responses:
          200:
            description: The request was successful
            body:
              application/json:
                example: !include examples/wishlists.json
          204:
            description: The request was succesful but no customer was found with that ID.  An empty element is returned
            body:
              application/json:
                example: |
                  {}          
          403:
            description: The access failed authentication
            body:
              application/json:
                example: !include examples/security.json
    /weRecommend:
      get:
        description: Retrieves a list of recomendations
        responses:
          200:
            description: The request was successful
            body:
              application/json:
                
                example: !include examples/we-recommend.json
          204:
            description: The request was succesful but no customer was found with that ID.  An empty element is returned
            body:
              application/json:
                example: |
                  {}         
          403:
            description: The access failed authentication
            body:
              application/json:
                example: !include examples/security.json
      patch:
        description: Updates a recomendation based on the cusotmers response
        responses:
          200:
            description: The request was successful
            body:
              application/json:
                example: !include examples/we-recommend-update.json                 
          400:
            description: The request failed validation
          403:
            description: The access failed authentication
            body:
              application/json:
                example: !include examples/security.json
          404:
            description: The customer belonging to id provided could not be found
            body:
              application/json:
                example: !include examples/update-not-found.json
    /marketingOptions:
      get:
        description: Get customer marketing options
        responses:
          200:
            description: The request was successful
            body:
              application/json:
          204:
            description: The request was succesful but no customer was found with that ID. An empty element is returned
            body:
              application/json:
                example: |
                  {}           
          403:
            description: The access failed authentication
            body:
              application/json:
                example: !include examples/security.json
    /bookings:
      get:
        queryParameters:
          fromDate:
          toDate:
          type:
          
        description: Retrieve all bookings for customerId
        responses:
          200:
            description: Valid response
            body:
              application/json: 
                example: !include examples/bookings.json
          404:
              description: The customer belonging to id provided could not be found   
      /booking:      
        /detail:
          post:
            description: Creates a booking, this will not interact with the summary block
            body:
              application/json:
                example: !include examples/create-booking.json
            responses:
              201:                
                description: The booking was created succesfully                
              400:
                description: The request failed validation                 
              403:
                description: The access failed authentication
                body:
                  application/json:
                    example: !include examples/security.json                                                  
              404:
                description: The customer belonging to id provided could not be found
                body:
                  application/json:
                    example: !include examples/create-booking-not-found.json
              409:
                description: The bookingId already exists                
      /{bookingID}:
        put:
          description: Creates or updates a Booking with specified bookingID
          body:
            application/json:
              example: !include examples/put-booking.json
          responses:
            200:
              description: The booking was updated
            201:
              description: The booking was created
            400:
              description: The request was invalid
        /detail:
          /dealFields:
            patch:
              description: This allows elements of the deal resource to be updated or added to
              responses:
                200:
                  description: The patch call was succesful
                400:
                  description: The request was invalid
                403:
                  description: The access failed authentication
                  body:
                    application/json:
                      example: !include examples/security.json 
                404:
                  description: The booking ID or customer does not exist
                  body:
                    application/json:
                      example: !include examples/booking-not-found.json
          /travelLegs:
            post:
              description: Creates a new travel leg.
              responses:
                201:
                  description: The Travel Leg was created succesfully.
                400:
                  description: Sequence number for the Travel Leg is empty or null.
                404:
                  description: The Booking and Customer that the Travel Leg belongs to cannot be found.
                409:
                  description: Travel Leg sequence number already exists.
            /{legID}:
              patch:
                description: This allows elements of the travel leg resource to be updated or added to
                responses:
                  200:
                    description: The patch call was succesful
                  400:
                    description: The request was invalid
                  403:
                    description: The access failed authentication
                    body:
                      application/json:
                        example: !include examples/security.json 
                  404:
                    description: The travel leg ID does not exist
                    body:
                      application/json:
                        example: !include examples/travel-leg-not-found.json
          /costings:
            post:
              description: Creates a booking costing.
              responses:
                201:                
                  description: The costing creation was successful                
                400:
                  description: The request was invalid       
                404:
                  description: The booking and customer that the costing belongs to cannot be found
                409:
                  description: Costing sequence number already exists
            /{costingsID}:
              patch:
                description: This allows elements of the costings resource to be updated or added to
                responses:
                  200:
                    description: The patch call was succesful
                  400:
                    description: The request was invalid
                  403:
                    description: The access failed authentication
                    body:
                      application/json:
                        example: !include examples/security.json 
                  404:
                    description: The costings ID does not exist
                    body:
                      application/json:
                        example: !include examples/costing-not-found.json
          /manifestsCombined:
            post:
              description: Creates a booking manifest.
              responses:
                201:                
                  description: The manifest was created succesfully                
                400:
                  description: Sequence number for Manifest is empty or null.          
                404:
                  description: The booking and customer that the manifest belongs to cannot be found
                409:
                  description: Manifest sequence number already exists
            /{manifestID}:
              patch:
                description: This allows elements of the manifest resource to be updated or added to
                responses:
                  200:
                    description: The patch call was succesful
                  400:
                    description: The request was invalid
                  403:
                    description: The access failed authentication
                    body:
                      application/json:
                        example: !include examples/security.json 
                  404:
                    description: The manifest ID does not exist
                    body:
                      application/json:
                        example: !include examples/manifest-not-found.json
    /enquiries:
      get:
        description: Retrieve all enquiries for customerID
        responses:
          200:
            description: Valid response
            body:
              application/json: 
                example: | 
                  {}
          404:
              description: The customer belonging to ID provided could not be found   
      /enquiry:      
        /detail:
          post:
            description: Creates an enquiry, this will not interact with the summary block
            body:
              application/json:
                example: !include examples/create-enquiry.json
            responses:
              201:                
                description: The enquiry was created succesfully                
              400:
                description: The request failed validation                 
              403:
                description: The access failed authentication
                body:
                  application/json:
                    example: !include examples/security.json                                                  
              404:
                description: The customer belonging to ID provided could not be found
                body:
                  application/json:
                    example: !include examples/create-enquiry-not-found.json
              409:
                description: The enquiryID already exists                
      /{enquiryID}:
        put:
          description: Creates or updates an Enquiry with specified enquiryID
          body:
            application/json:
              example: !include examples/put-enquiry.json
          responses:
            200:
              description: The enquiry was updated
            201:
              description: The enquiry was created
            400:
              description: The request was invalid
        /detail:
          /dealFields:
            patch:
              description: This allows elements of the deal resource to be updated or added to
              responses:
                200:
                  description: The patch call was succesful
                400:
                  description: The request was invalid
                403:
                  description: The access failed authentication
                  body:
                    application/json:
                      example: !include examples/security.json 
                404:
                  description: The enquiry ID or customer does not exist
                  body:
                    application/json:
                      example: !include examples/enquiry-not-found.json
          /travelLegs:
            post:
              description: Creates a new travel leg.
              responses:
                201:
                  description: The Travel Leg was created succesfully.
                400:
                  description: Sequence number for the Travel Leg is empty or null.
                404:
                  description: The Enquiry and Customer that the Travel Leg belongs to cannot be found.
                409:
                  description: Travel Leg sequence number already exists.
            /{legID}:
              patch:
                description: This allows elements of the travel leg resource to be updated or added to
                responses:
                  200:
                    description: The patch call was succesful
                  400:
                    description: The request was invalid
                  403:
                    description: The access failed authentication
                    body:
                      application/json:
                        example: !include examples/security.json 
                  404:
                    description: The travel leg ID does not exist
                    body:
                      application/json:
                        example: !include examples/travel-leg-not-found.json
          /costings:
            post:
              description: Creates an enquiry costing.
              responses:
                201:                
                  description: The costing creation was successful                
                400:
                  description: The request was invalid       
                404:
                  description: The booking and customer that the costing belongs to cannot be found
                409:
                  description: Costing sequence number already exists
            /{costingsID}:
              patch:
                description: This allows elements of the costings resource to be updated or added to
                responses:
                  200:
                    description: The patch call was succesful
                  400:
                    description: The request was invalid
                  403:
                    description: The access failed authentication
                    body:
                      application/json:
                        example: !include examples/security.json 
                  404:
                    description: The costings ID does not exist
                    body:
                      application/json:
                        example: !include examples/costing-not-found.json
          /manifestsCombined:
            post:
              description: Creates a booking manifest.
              responses:
                201:                
                  description: The manifest was created succesfully                
                400:
                  description: Sequence number for Manifest is empty or null.          
                404:
                  description: The booking and customer that the manifest belongs to cannot be found
                409:
                  description: Manifest sequence number already exists
            /{manifestID}:
              patch:
                description: This allows elements of the manifest resource to be updated or added to
                responses:
                  200:
                    description: The patch call was succesful
                  400:
                    description: The request was invalid
                  403:
                    description: The access failed authentication
                    body:
                      application/json:
                        example: !include examples/security.json 
                  404:
                    description: The manifest ID does not exist
                    body:
                      application/json:
                        example: !include examples/manifest-not-found.json
 
